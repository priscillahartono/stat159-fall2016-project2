tableSmoker
tableNonSmoker <- babies1 %>%
filter(smoke==0) %>%
group_by(smoke) %>%
summary(babies1) %>%
group_by(smoke) %>%
summarize(sd=sd(bwt))
tableNonSmoker
tableNonSmoker <- babies1 %>%
filter(smoke==0) %>%
group_by(smoke) %>%
summary(babies1)
tableNonSmoker
table2NonSmoker <- babies1 %>%
group_by(smoke) %>%
summarize(sd=sd(bwt))
table2NonSmoker
tableNonSmoker <- babies1 %>%
filter(smoke==0) %>%
group_by(smoke) %>%
summary(babies1)
tableNonSmoker
table2NonSmoker <- babies1 %>%
filter(smoke==0) %>%
group_by(smoke) %>%
summarize(sd=sd(bwt))
table2NonSmoker
tableSmoker <- babies1 %>%
filter(smoke==1) %>%
group_by(smoke) %>%
summary(babies1)
tableSmoker
table2Smoker <- babies1 %>%
filter(smoke==1) %>%
group_by(smoke) %>%
summarize(sd=sd(bwt))
table2Smoker
graphTable <- babies1 %>%
ggplot(aes(x=smoke, y=bwt)) +
geom_boxplot()
graphTable
graphTable <- babies1 %>%
group_by(smoke)
ggplot(aes(x=smoke, y=bwt)) +
geom_boxplot()
graphTable
graphTable <- babies1 %>%
group_by(smoke)
ggplot(aes(x=smoke, y=bwt)) +
geom_boxplot()
graphTable
graphTable <- babies1 %>%
filter(smoke==0 | smoke==1) %>%
ggplot(smoke, bwt) +
geom_boxplot()
graphTable
graphTable <- babies1 %>%
filter(smoke==0 | smoke==1)
graphTable
graphTable <- babies1 %>%
filter(smoke==0 | smoke==1) %>%
ggplot(aes(smoke, bwt)) +
geom_boxplot()
graphTable
graphTable <- babies1 %>%
filter(smoke==0 | smoke==1) %>%
group_by(smoke) %>%
ggplot(aes(smoke, bwt)) +
geom_boxplot()
graphTable
graphTable <- filtered %>%
ggplot(aes(smoke, bwt)) +
geom_boxplot()
graphTable
graphTable <- ggplot(filtered, aes(x=smoke, y=bwt)) +
geom_boxplot()
graphTable
filtered <- babies1 %>%
group_by(smoke) %>%
filter(smoke==0 | smoke==1)
head(filtered)
graphTable <- ggplot(filtered, aes(x='smoke', y='bwt')) +
geom_boxplot()
graphTable
NonSmoker <- babies1 %>%
filter(smoke==0) %>%
group_by(smoke)
NonSmoker
tableNonSmoker <- NonSmoker %>%
summary(babies1)
tableNonSmoker
table2NonSmoker <- NonSmoker %>%
summarize(sd=sd(bwt))
table2NonSmoker
graphNonSmoker <- ggplot(NonSmoker, aes(smoke, bwt)) +
geom_boxplot()
graphNonSmoker <- ggplot(NonSmoker, aes(smoke, bwt)) +
geom_boxplot() +
labs(title="Distribution of Birthweight of Babies whose Parents Do Not Smoke", x="Smoker", y="Birthweight")
graphNonSmoker <- ggplot(NonSmoker, aes(smoke, bwt)) +
geom_boxplot() +
labs(title="Distribution of Birthweight of Babies whose Parents Do Not Smoke", x="Smoker", y="Birthweight") +
plot(ylim=c(0, 200))
graphNonSmoker <- ggplot(NonSmoker, aes(smoke, bwt)) +
geom_boxplot() +
labs(title="Distribution of Birthweight of Babies whose Parents Do Not Smoke", x="Smoker", y="Birthweight")
plot(graphNonSmoker, ylim=c(0, 200))
library("ggthemes", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("DataComputing", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
---
file.choose()
file.choose()
read.file("/Users/priscillahartono/Downloads/NCESEnrollment.csv")
read.csv("/Users/priscillahartono/Downloads/NCESEnrollment.csv")
read.csv("/Users/priscillahartono/Downloads/NCESEnrollment.csv")
file.choose()
read.file("/Users/priscillahartono/Downloads/Bootstrap.Rmd")
file.choose()
read.csv("/Users/priscillahartono/Desktop/fall 2016/STAT 135/09:16/NCESEnrollment.csv")
library("DataComputing", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
NCES <- read.csv("/Users/priscillahartono/Desktop/fall 2016/STAT 135/09:16/NCESEnrollment.csv")
View(NCES)
na.omit()
omitNA <- na.omit(NCES)
View(omitNA)
load.file()
read.file()
Advertising <- read.table("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv"Advertising <- read.table("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
Advertising <- read.table("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
Advertising <- read.table("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
summaryTV <- summary(Advertising$TV)
png("histogram-tv.png")
hist(Advertising$TV)
dev.off()
Advertising <- read.table("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
View(Advertising)
View(Advertising)
Advertising <- read.table("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
summaryTV <- summary(Advertising$TV)
png("histogram-tv.png")
hist(Advertising$"TV")
dev.off()
Advertising <- read.table("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
summaryTV <- summary(Advertising$TV)
png("histogram-tv.png")
hist(summaryTV)
dev.off()
Advertising <- read.table("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
summaryTV <- summary(Advertising$TV)
png("histogram-tv.png")
hist(Advertising$V1)
dev.off()
Advertising <- read.table("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
summaryTV <- summary(Advertising$TV)
png("histogram-tv.png")
hist(Advertising$V2)
dev.off()
Advertising <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
summaryTV <- summary(Advertising$TV)
png("histogram-tv.png")
hist(Advertising$)
dev.off()
Advertising <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
summaryTV <- summary(Advertising$TV)
png("histogram-tv.png")
hist(Advertising$TV)
dev.off()
Advertising <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
summaryTV <- summary(Advertising$TV)
png("histogram-tv.png")
hist(Advertising$TV)
dev.off()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("ggthemes", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
Advertising <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
summaryTV <- summary(Advertising$TV)
png("histogram-tv.png")
hist(Advertising$TV)
dev.off()
Advertising <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
lm(Sales ~ TV)
?lm
lm(Sales ~ TV)
lm(TV ~ Sales)
lm("TV" ~ "Sales")
Dataset can be found [here]("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
library(png)
library(grid)
```{r fig.width=7, fig.height=5, echo=FALSE, fig.align='center', fig.cap="Scatterplot with fitted regression line", fig.pos="H"}
library(png)
library(grid)
scatterplot <- readPNG('../images/scatterplot-tv-sales.png')
grid.raster(scatterplot)
```
```{r fig.width=7, fig.height=5, echo=FALSE, fig.align='center', fig.cap="Scatterplot with fitted regression line", fig.pos="H"}
library(png)
library(grid)
scatterplot <- readPNG('../images/scatterplot-tv-sales.png')
grid.raster(scatterplot)
```
```{r fig.width=7, fig.height=5, echo=FALSE, fig.align='center', fig.cap="Scatterplot with fitted regression line", fig.pos="H"}
library(png)
library(grid)
scatterplot <- readPNG('../images/scatterplot-tv-sales.png')
grid.raster(scatterplot)
```
library("mosaic", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
h
h
H
$\hat{\beta_0}$
\hat(\beta_0)
hat(\beta_0)
hat(beta_0)
install.packages(xtable)
install.packages("xtable")
1-chi2cdf(1.89, 5)
file.choose()
read.file("/Users/priscillahartono/Desktop/fall 2016/STAT 135/data/Chapter 8/gamma-arrivals.txt")
read.table("/Users/priscillahartono/Desktop/fall 2016/STAT 135/data/Chapter 8/gamma-arrivals.txt")
data <- read.table("/Users/priscillahartono/Desktop/fall 2016/STAT 135/data/Chapter 8/gamma-arrivals.txt")
head(data)
data <- read.table("/Users/priscillahartono/Desktop/fall 2016/STAT 135/data/Chapter 8/gamma-arrivals.txt")
hist(V1)
data <- read.table("/Users/priscillahartono/Desktop/fall 2016/STAT 135/data/Chapter 8/gamma-arrivals.txt")
hist("V1")
library("DataComputing", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("ggthemes", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
hist(V1)
hist("V1")
data <- read.table("/Users/priscillahartono/Desktop/fall 2016/STAT 135/data/Chapter 8/gamma-arrivals.txt")
hist(data)
data <- read.table("/Users/priscillahartono/Desktop/fall 2016/STAT 135/data/Chapter 8/gamma-arrivals.txt")
hist(data)
gammaArrivals <- read.table("/Users/priscillahartono/Desktop/fall 2016/STAT 135/data/Chapter 8/gamma-arrivals.txt")
hist(gammaArrivals)
mean1 <- mean(gammaArrivals)
mean2 <- mean(gammaArrivals^2)
varianceMoM = mean1^2 - mean2
varianceMoM
mean1 <- mean(gammaArrivals)
mean2 <- mean(gammaArrivals^2)
mean1 <- mean(gammaArrivals)
mean1 <- mean(gammaArrivals$V1)
mean2 <- mean(gammaArrivals$V1^2)
mean1 <- mean(gammaArrivals$V1)
mean2 <- mean(gammaArrivals$V1^2)
varianceMoM = mean1^2 - mean2
varianceMoM
fitdistr(gammaArrivals, "gamma")$estimate
install.packages("MASS")
install.packages("MASS")
require(MASS)
mle_estim <- fitdistr(gammaArrivals, "gamma")$estimate
mle_estim <- fitdistr(gammaArrivals, "gamma")$estimate
require(MASS)
mle_estim <- fitdistr(gammaArrivals, "gamma")$estimate
mle_estim
mle_estim <- fitdistr(gammaArrivals, "gamma")$estimate
fitdistr(gammaArrivals, "gamma")
count <- length(gammaArrivals)
mean1 <- mean(gammaArrivals$V1)
mean2 <- mean(gammaArrivals$V1^2)
varianceMoM = mean2 - mean1
MoM1 <- mean1^2/varianceMoM
MoM2 <- mean1/varianceMoM
MoM_estim <- c(MoM1, MoM2)
MoM_estim
mean1 <- mean(gammaArrivals$V1)
mean2 <- mean(gammaArrivals$V1^2)
varianceMoM = mean2 - mean1
varianceMoM
mean1 <- mean(gammaArrivals$V1)
mean2 <- mean(gammaArrivals$V1^2)
varianceMoM = mean2 - mean1^2
varianceMoM
count <- length(gammaArrivals)
mean1 <- mean(gammaArrivals$V1)
mean2 <- mean(gammaArrivals$V1^2)
varianceMoM = mean2 - mean1^2
MoM1 <- mean1^2/varianceMoM
MoM2 <- mean1/varianceMoM
MoM_estim <- c(MoM1, MoM2)
MoM_estim
mle_estim <- fitdistr(gammaArrivals, "gamma", V1)$estimate
mle_estim
mle_estim <- fitdistr(gammaArrivals, "gamma", V1)$estimate
mle_estim <- fitdistr(gammaArrivals$V1, "gamma")$estimate
mle_estim <- fitdistr(gammaArrivals$V1, "gamma")$estimate
mle_estim
mean1 <- mean(gammaArrivals$V1)
mean2 <- mean(gammaArrivals$V1^2)
varianceMoM = mean2 - mean1^2
MoM1 <- mean1^2/varianceMoM
MoM2 <- mean1/varianceMoM
MoM_estim <- c(MoM1, MoM2)
MoM_estim
hist(gammaArrivals$V1)
dgamma(gammaArrivals$V1, shape = mean1, rate = mean2)
dgamma(gammaArrivals$V1, shape = mean1, rate = mean2)
dgamma(histogram2, shape = mean1, rate = mean2)
histogram2 <- hist(gammaArrivals$V1)
dgamma(histogram2, shape = mean1, rate = mean2)
curve(dgamma(gammaArrivals$V1, shape = mean1, rate = mean2), from = NULL, to = NULL, n = 101, add = TRUE, type = "l", xlab = xname, ylab = NULL, log = NULL, xlim = NULL)
curve(dgamma(gammaArrivals$V1, shape = mean1, rate = mean2), from = NULL, to = NULL, n = 101, add = TRUE, type = "l", xlab = xname, ylab = NULL, log = NULL, xlim = NULL, lwd = 2)
curve(dgamma(gammaArrivals$V1, shape = mle_estim, rate = mle_estim), from = NULL, to = NULL, n = 101, add = TRUE, type = "l", xlab = xname, ylab = NULL, log = NULL, xlim = NULL, lwd = 2)
par(mfrow = c(3, 1))
hist(gammaArrivals$V1)
par(mfrow = c(3, 1))
hist(gammaArrivals$V1)
hist(gammaArrivals$V1)
gammaArrivals <- read.table("/Users/priscillahartono/Desktop/fall 2016/STAT 135/data/Chapter 8/gamma-arrivals.txt")
hist(gammaArrivals$V1)
dgamma(gammaArrivals$V1, shape = MoM1, scale = MoM2)
library(ggplot2)
library(MASS)
install.packages(pROC)
hist(gammaArrivals$V1)
gammaArrivals <- read.table("/Users/priscillahartono/Desktop/fall 2016/STAT 135/data/Chapter 8/gamma-arrivals.txt")
?curve
boot_samps1 <- replicate(500, rgamma(n, shape = mle_estim[1], rate = mle_estim[2]))
boot_samps1 <- replicate(500, rgamma(gammaArrivals$V1, shape = mle_estim[1], rate = mle_estim[2]))
mean1 <- mean(gammaArrivals$V1)
mean2 <- mean(gammaArrivals$V1^2)
varianceMoM = mean2 - mean1^2
MoM1 <- mean1^2/varianceMoM
MoM2 <- mean1/varianceMoM
MoM_estim <- c(MoM1, MoM2)
MoM_estim
curve(dgamma())
head(boot_MoM1)
boot_MoM1 <- apply(boot_samps1, 2, function(x){fitdistr(x, "gamma")$estimate})
install.packages(testthat)
library(testthat)
install.packages("testthat")
install.packages("babynames")
install.packages("stringr")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(babynames)
library(babynames)
library(ggplot2)
library(stringr)
Scatterplot <- pairs(data = Advertising, main = "Scatterplot Matrix")
Advertising <- read.csv("../../data/Advertising.csv")
png("../images/scatterplot-matrix.png")
Scatterplot <- pairs(~TV+Radio+Newspaper+Sales, data = Advertising, main = "Scatterplot Matrix")
Advertising <- read.csv("../../data/Advertising.csv")
read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
Scatterplot <- pairs(~TV+Radio+Newspaper+Sales, data = Advertising, main = "Scatterplot Matrix")
Advertising <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/Advertising.csv")
Scatterplot <- pairs(~TV+Radio+Newspaper+Sales, data = Advertising, main = "Scatterplot Matrix")
Scatterplot
Scatterplot <- pairs(~TV+Radio+Newspaper+Sales, data = Advertising, main = "Scatterplot Matrix")
png("../images/scatterplot-matrix.png")
Scatterplot
dev.off()
Scatterplot
Scatterplot <- pairs(~TV+Radio+Newspaper+Sales, data = Advertising, main = "Scatterplot Matrix")
png("../images/scatterplot-matrix.png")
dev.off()
Scatterplot
Matrix <- cor(Advertising)
Matrix
Scatterplot2 <- scatterplot.matrix(~TV+Radio+Newspaper|Sales, data = Advertising, main = "Scatterplot Matrix")
png("../images/scatterplot-matrix.png")
Scatterplot2
dev.off()
Scatterplot2 <- scatterplot.matrix(~TV+Radio+Newspaper|Sales, data = Advertising, main = "Scatterplot Matrix")
summary(Advertising)
summaryTable <- summary(Advertising)
print(summaryTable)
reg <- lm(mpg ~ disp + hp, data = mtcars)
regsum <- summary(reg)
regsum
regsum <- summary(reg)
regsum
install.packages("pander")
load('../data/regression.RData')
library(xtable)
regressionTable <- xtable(regressionSummary$coefficients, digits=2, caption='Information about Regression Coefficients')
print(regressionTable, type = "latex", comment=FALSE, caption.placement='top')
load('../data/regression.RData')
library(xtable)
regressionTableRadio <- xtable(summary(RadioSalesReg)$coefficients, digits=2, caption='Simple Regression of Sales on Radio')
print(regressionTableRadio, type = "latex", comment=FALSE, caption.placement='top')
library(xtable)
reg_radio <- xtable(summary(Radio_regression)$coefficients, digits=4, caption='Regression of Radio on Sales')
print(reg_radio, type = "latex", comment=FALSE, caption.placement='top')
devtools::install_github("rstudio/rmarkdown")
install.packages(devtools)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
read.file(http://www-bcf.usc.edu/%7Egareth/ISL/Advertising.csv)
shiny::runApp('stat159fall2016/Lab8')
load('Advertising.csv')
load('Advertising.csv')
read.file(http://www-bcf.usc.edu/%7Egareth/ISL/Advertising.csv)
shiny::runApp('stat159fall2016/Lab8')
read.csv("Advertising.csv")
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
shiny::runApp('stat159fall2016/Lab8')
library(stringr)
library(ggplot2)
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
library(shiny)
ui <- fluidPage()
server <- function(input, output) {}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a number",
value = 25, min = 1, max = 100),
plotOutput("hist")
)
server <- function(input, output) {
output$hist <- renderPlot({
hist(rnorm(input$num))
})
}
shinyApp(ui = ui, server = server)
# 01-kmeans-app
palette(c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3",
"#FF7F00", "#FFFF33", "#A65628", "#F781BF", "#999999"))
library(shiny)
ui <- fluidPage(
headerPanel('Iris k-means clustering'),
sidebarPanel(
selectInput('xcol', 'X Variable', names(iris)),
selectInput('ycol', 'Y Variable', names(iris),
selected = names(iris)[[2]]),
numericInput('clusters', 'Cluster count', 3,
min = 1, max = 9)
),
mainPanel(
plotOutput('plot1')
)
)
server <- function(input, output) {
selectedData <- reactive({
iris[, c(input$xcol, input$ycol)]
})
clusters <- reactive({
kmeans(selectedData(), input$clusters)
})
output$plot1 <- renderPlot({
par(mar = c(5.1, 4.1, 0, 1))
plot(selectedData(),
col = clusters()$cluster,
pch = 20, cex = 3)
points(clusters()$centers, pch = 4, cex = 4, lwd = 4)
})
}
shinyApp(ui = ui, server = server)
# 01-kmeans-app
palette(c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3",
"#FF7F00", "#FFFF33", "#A65628", "#F781BF", "#999999"))
library(shiny)
ui <- fluidPage(
headerPanel('Iris k-means clustering'),
sidebarPanel(
selectInput('xcol', 'X Variable', names(iris)),
selectInput('ycol', 'Y Variable', names(iris),
selected = names(iris)[[2]]),
numericInput('clusters', 'Cluster count', 3,
min = 1, max = 9)
),
mainPanel(
plotOutput('plot1')
)
)
server <- function(input, output) {
selectedData <- reactive({
iris[, c(input$xcol, input$ycol)]
})
clusters <- reactive({
kmeans(selectedData(), input$clusters)
})
output$plot1 <- renderPlot({
par(mar = c(5.1, 4.1, 0, 1))
plot(selectedData(),
col = clusters()$cluster,
pch = 20, cex = 3)
points(clusters()$centers, pch = 4, cex = 4, lwd = 4)
})
}
shinyApp(ui = ui, server = server)
shiny::runApp('Downloads/downloads/code')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('Downloads/downloads/code')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
shiny::runApp('stat159fall2016/Lab8')
